<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Oliver Gibbons</title>
    <link>https://ogibbo.github.io/post/</link>
    <description>Recent content in Projects on Oliver Gibbons</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://ogibbo.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Robotic Manipulation Using Tactile Feedback: A Strategy for Peg in Hole Insertion Tasks</title>
      <link>https://ogibbo.github.io/post/proj1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ogibbo.github.io/post/proj1/</guid>
      <description>Assembly operations account for a significant portion of an entire production cycle. Around 40% of these operations can be reduced to a peg-in-hole task. This makes the task a useful starting point to develop new strategies.
This project investigated a peg insertion strategy that made sole use of tactile sensing throughout. Most solutions in the literature make use of force-torque sensors or cameras. However, force-torque sensors increase the cost of the overall system and cameras will fail in low light conditions.</description>
    </item>
    
    <item>
      <title>Indoor Delivery Robot - Path Planning and Obstacle Avoidance</title>
      <link>https://ogibbo.github.io/post/proj2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ogibbo.github.io/post/proj2/</guid>
      <description>The aim of this project was to develop a robot capable of delivering parcels within apartment buildings, in an attempt to solve one section of the last-mile delivery problem.
Here we simulate a robot attempting to get from a starting position to a recipients door.
Key steps: The robot is assumed to have access to the building&amp;rsquo;s floorplan. A probabilistic roadmap planner is then used to calculate an ideal path to the goal from it&amp;rsquo;s starting point.</description>
    </item>
    
    <item>
      <title>Digit Classification</title>
      <link>https://ogibbo.github.io/post/proj3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ogibbo.github.io/post/proj3/</guid>
      <description>Neural network trained using PyTorch and MNIST dataset. The model will then predict the value of the user drawn digit in a PyGame window.
Key steps: Neural network trained using stochastic gradient descent and a cross-entropy loss. Dropout used to prevent overfitting. User can then draw their own digit in a PyGame window to be predicted. </description>
    </item>
    
  </channel>
</rss>
